version: '3.4'
services:
  productor_webserver:
    image: productor_rpy
    restart: always
    depends_on:
      - productor_initdb
    env_file: .env
    environment:
      AIRFLOW_HOME: /root/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@172.17.0.1:5439/airflow
    volumes:
      - ./airflow.cfg:/root/airflow/airflow.cfg
      - ./airflower/dags:/root/airflow/dags
      - ./airflower/plugins:/root/airflow/plugins
      - productor_airflow_logs:/root/airflow/logs
    ports:
      - "8080:8080"
    command: airflow webserver
  productor_postgres:
    image: postgres:9.6
    restart: always
    environment:
      - POSTGRES_USER=${AIRFLOW_USER}
      - POSTGRES_PASSWORD=${AIRFLOW_PASSWORD}
      - POSTGRES_DB=${AIRFLOW_DB}
    ports:
      - 5439:5432
    volumes:
      - airflow_postgres:/var/lib/postgresql/data
  productor_initdb:
    image: productor_rpy
    restart: always
    depends_on:
      - productor_postgres
    env_file: .env
    environment:
      AIRFLOW_HOME: /root/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@172.17.0.1:5439/airflow
    command: airflow initdb
  productor_scheduler:
    image: productor_rpy
    restart: always
    depends_on:
      - productor_webserver
    env_file: .env
    environment:
      AIRFLOW_HOME: /root/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@172.17.0.1:5439/airflow
    volumes:
      - ./airflow.cfg:/root/airflow/airflow.cfg
      - ./airflower/dags:/root/airflow/dags
      - ./airflower/scripts:/home/scripts
      - ./airflower/plugins:/root/airflow/plugins
      - ./.env:/root/.Renviron
      - productor_airflow_logs:/root/airflow/logs
    command: airflow scheduler

volumes:
  productor_volume: {}
  airflow_postgres:
  productor_airflow_logs:
